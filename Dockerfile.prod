# Build stage for frontend
FROM node:18 AS frontend-builder
WORKDIR /app/frontend
COPY neoserve-ai-frontend/package*.json ./
RUN npm install
COPY neoserve-ai-frontend/ .
RUN npm run build

# Build stage for Python backend
FROM python:3.10-slim AS backend-builder
WORKDIR /app/backend

# Install system dependencies including Node.js
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    gnupg \
    && curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs \
    && npm install -g npm@latest \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Final stage
FROM python:3.10-slim
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    nginx \
    && rm -rf /var/lib/apt/lists/*

# Copy backend
COPY --from=backend-builder /usr/local/lib/python3.10/site-packages /usr/local/lib/python3.10/site-packages
COPY --from=backend-builder /usr/local/bin/uvicorn /usr/local/bin/uvicorn
COPY --from=backend-builder /usr/local/bin/gunicorn /usr/local/bin/gunicorn

# Copy frontend
COPY --from=frontend-builder /app/frontend/build /var/www/html

# Copy backend source
COPY . .

# Configure nginx
COPY nginx.conf /etc/nginx/nginx.conf

# Expose port
EXPOSE 80

# Start services
COPY start_services.sh /app/
RUN chmod +x /app/start_services.sh

CMD ["/app/start_services.sh"]
